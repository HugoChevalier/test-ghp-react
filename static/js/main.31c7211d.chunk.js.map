{"version":3,"sources":["data.js","Exemple.js","App.js","reportWebVitals.js","index.js"],"names":["data","data2","quarter","earnings","Exemple","className","domainPadding","tickValues","tickFormat","dependentAxis","x","y","App","fetch","then","response","console","log","gameName","items","map","game","name","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4PA6CiBA,EA7CJ,CACT,MAAS,CACP,CACE,KAAQ,SACR,cAAiB,GACjB,SAAY,IAEV,CACF,KAAQ,SACR,cAAiB,GACjB,SAAY,GAEV,CACF,KAAQ,SACR,cAAiB,EACjB,SAAY,IAEV,CACF,KAAQ,SACR,cAAiB,KACjB,SAAY,IAEV,CACF,KAAQ,SACR,cAAiB,IACjB,SAAY,IAEV,CACF,KAAQ,SACR,cAAiB,EACjB,SAAY,IAEV,CACF,KAAQ,SACR,cAAiB,GACjB,SAAY,GAEV,CACF,KAAQ,SACR,cAAiB,IACjB,SAAY,M,QCrCdC,EAAQ,CACZ,CAACC,QAAS,EAAGC,SAAU,MACvB,CAACD,QAAS,EAAGC,SAAU,OACvB,CAACD,QAAS,EAAGC,SAAU,OACvB,CAACD,QAAS,EAAGC,SAAU,OAqCVC,EAlCC,WACZ,OAEE,sBAAKC,UAAU,OAAf,oBAGA,eAAC,IAAD,CAGEC,cAAe,GAHjB,UAKE,cAAC,IAAD,CAGEC,WAAY,CAAC,EAAG,EAAG,EAAG,GACtBC,WAAY,CAAC,YAAa,YAAa,YAAa,eAEtD,cAAC,IAAD,CACEC,eAAa,EAEbD,WAAY,SAACE,GAAD,iBAAYA,EAAI,IAAhB,QAEd,cAAC,IAAD,CACEV,KAAMC,EACNS,EAAE,UACFC,EAAE,oBCaGC,MA1Cf,WAEEC,MAAM,uCACLC,MAAK,SAAAC,GAAQ,OAAIC,QAAQC,IAAIF,MAE9B,IAAMG,EAAWlB,EAAKmB,MAAMC,KAAI,SAACC,GAAD,OAAUA,EAAKC,QAE/C,OACE,sBAAKjB,UAAU,MAAf,UAEA,qBAAKA,UAAU,QAAf,wBAEA,sBAAKA,UAAU,QAAf,UACE,cAAC,EAAD,IAGA,sBAAKA,UAAU,OAAf,gCAGA,eAAC,IAAD,CAAcC,cAAe,GAA7B,UACE,cAAC,IAAD,CACEC,WAAY,CAAC,EAAG,EAAG,EAAG,GACtBC,WAAYU,IAEd,cAAC,IAAD,CACET,eAAa,EACbD,WAAY,SAACE,GAAD,gBAAWA,EAAX,aAEd,cAAC,IAAD,CACEV,KAAMA,EAAKmB,MACXT,EAAE,OACFC,EAAE,+BCzBGY,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBX,MAAK,YAAkD,IAA/CY,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.31c7211d.chunk.js","sourcesContent":["const data = {\r\n    \"items\": [\r\n      {\r\n        \"name\": \"jeux 1\",\r\n        \"price_average\": 12,\r\n        \"quantity\": 14\r\n      },\r\n          {\r\n        \"name\": \"jeux 2\",\r\n        \"price_average\": 14,\r\n        \"quantity\": 3\r\n      },\r\n          {\r\n        \"name\": \"jeux 3\",\r\n        \"price_average\": 5,\r\n        \"quantity\": 24\r\n      },\r\n          {\r\n        \"name\": \"jeux 4\",\r\n        \"price_average\": 12.8,\r\n        \"quantity\": 56\r\n      },\r\n          {\r\n        \"name\": \"jeux 5\",\r\n        \"price_average\": 7.90,\r\n        \"quantity\": 12\r\n      },\r\n          {\r\n        \"name\": \"jeux 6\",\r\n        \"price_average\": 6,\r\n        \"quantity\": 75\r\n      },\r\n          {\r\n        \"name\": \"jeux 7\",\r\n        \"price_average\": 27,\r\n        \"quantity\": 2\r\n      },\r\n          {\r\n        \"name\": \"jeux 8\",\r\n        \"price_average\": 4.5,\r\n        \"quantity\": 12\r\n      }\r\n      ]\r\n  }\r\n\r\n  export default data;\r\n","import { VictoryBar, VictoryChart, VictoryAxis } from 'victory';\r\n\r\n\r\nconst data2 = [\r\n  {quarter: 1, earnings: 13000},\r\n  {quarter: 2, earnings: 16500},\r\n  {quarter: 3, earnings: 14250},\r\n  {quarter: 4, earnings: 19000}\r\n];\r\n\r\nconst Exemple = () => {\r\n    return (\r\n        \r\n      <div className=\"card\">\r\n      Exemple\r\n\r\n      <VictoryChart\r\n        // domainPadding will add space to each side of VictoryBar to\r\n        // prevent it from overlapping the axis\r\n        domainPadding={20}\r\n      >\r\n        <VictoryAxis\r\n          // tickValues specifies both the number of ticks and where\r\n          // they are placed on the axis\r\n          tickValues={[1, 2, 3, 4]}\r\n          tickFormat={[\"Quarter 1\", \"Quarter 2\", \"Quarter 3\", \"Quarter 4\"]}\r\n        />\r\n        <VictoryAxis\r\n          dependentAxis\r\n          // tickFormat specifies how ticks should be displayed\r\n          tickFormat={(x) => (`$${x / 1000}k`)}\r\n        />\r\n        <VictoryBar\r\n          data={data2}\r\n          x=\"quarter\"\r\n          y=\"earnings\"\r\n        />\r\n      </VictoryChart>\r\n\r\n      </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Exemple;\r\n\r\n","import './App.css';\nimport { VictoryBar, VictoryChart, VictoryAxis } from 'victory';\nimport data from './data'\nimport Exemple from './Exemple'\n\n\nfunction App() {\n  \n  fetch(\"https://pokeapi.co/api/v2/pokemon/1\")\n  .then(response => console.log(response))\n\n  const gameName = data.items.map((game) => game.name);\n  \n  return (\n    <div className=\"App\">\n\n    <div className=\"title\"> Dashboard</div>\n\n    <div className=\"ligne\">\n      <Exemple />\n\n      \n      <div className=\"card\">\n      Prix moyen par jeux\n\n      <VictoryChart domainPadding={20}>\n        <VictoryAxis\n          tickValues={[1, 2, 3, 4]}\n          tickFormat={gameName}\n        />\n        <VictoryAxis\n          dependentAxis\n          tickFormat={(x) => (`${x}â‚¬`)}\n        />\n        <VictoryBar\n          data={data.items}\n          x=\"name\"\n          y=\"price_average\"\n        />\n      </VictoryChart>\n\n      </div>\n      </div>\n\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}